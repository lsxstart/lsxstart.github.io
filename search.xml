<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring框架概述</title>
      <link href="/archives/1e6fc079.html"/>
      <url>/archives/1e6fc079.html</url>
      
        <content type="html"><![CDATA[<h4 id="Spring-框架概述"><a href="#Spring-框架概述" class="headerlink" title="Spring 框架概述"></a>Spring 框架概述</h4><h5 id="1-spring"><a href="#1-spring" class="headerlink" title="1. spring"></a>1. spring</h5><ul><li><p>Spring 是轻量的、开源的JavaEE 框架</p><span id="more"></span></li><li><p>Spring 框架基本涵盖了企业级应用开发的多个方面，大大降低了解企业应用的复杂性</p></li><li><p>Spring 有两个核心部分: IOC 和 AOP</p><ul><li>IOC : (Inversion of control )控制反转，将创建对象的过程交给Spring 进行管理</li><li>AOP ：面向切面，不修改源代码进行功能的增强</li></ul></li><li><p>Spring 的特点:</p><ul><li>方便解耦，降低耦合程度，简化开发</li><li>AOP的编程支持</li><li>声明式事务的支持</li><li>方便进行程序的测试</li><li>方便和其他框架进行整合</li><li>降低了API开发难度</li><li>java源码的经典学习范例<ul><li>spring 源码设计精妙，结构清晰，处处体现着对java设计模式的灵活运用以及对java技术的高深造诣</li></ul></li></ul></li></ul><h5 id="2-Spring-框架结构"><a href="#2-Spring-框架结构" class="headerlink" title="2. Spring 框架结构"></a>2. Spring 框架结构</h5><p><strong><img src="/archives/1e6fc079/image-1.png" class=""></strong></p><ol><li><p>Data Access/Integration(数据访问/集成)</p></li><li><p>Web 模块</p></li><li><p>Core Container(Spring 的核心容器)</p></li><li><p>AOP 、 Aspects、Instrumentation、Messaging</p></li><li><p>Test 模块</p><p>详细内容见 <a href="http://c.biancheng.net/spring/module.html">http://c.biancheng.net/spring/module.html</a></p></li></ol><h5 id="3-Spring-入门案例"><a href="#3-Spring-入门案例" class="headerlink" title="3. Spring 入门案例"></a>3. Spring 入门案例</h5><ol><li>Spring 文档结构</li></ol><p>​<strong><img src="/archives/1e6fc079/image-2.png" class=""></strong></p><ul><li>docs : spring 中一些官方文档</li><li>libs : spring 中的jar包 , 每个容器都有三个jar包</li></ul><p>​<strong><img src="/archives/1e6fc079/image-3.png" class=""></strong></p><ul><li>schema: 映射，内部都是以后缀名为.xsd的文件</li></ul><p>​             xsd (xml shema document )是xml架构定义文件，用于定义相应XML文件中的数据结构、数据类型等信息。</p><ol start="2"><li>第一个案例<ol><li>打开idea工具，创建普通java工程</li><li>导入Spring5 相关jar包</li></ol></li></ol><p><strong><img src="/archives/1e6fc079/image-4.png" class=""></strong></p><p>​ 3.  导入jar包添加依赖</p><p>​       <strong><img src="/archives/1e6fc079/image-6.png" class=""></strong></p><ul><li><p>第一种方法：</p><p><strong><img src="/archives/1e6fc079/image-7.png" class=""></strong></p></li><li><p>第二种方法：</p><ul><li>第一步</li></ul><p><strong><img src="/archives/1e6fc079/image-8.png" class=""></strong></p><ul><li>第二步</li></ul><p><strong><img src="/archives/1e6fc079/image-9.png" class=""></strong></p><ul><li>第三步</li></ul></li></ul><p>​<strong><img src="/archives/1e6fc079/image-10.png" class=""></strong></p><p>​4.创建普通类，在这个类上创建普通方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"add..."</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​5. 创建Spring 配置文件，在配置文件配置创建的对象</p><p> 注意：Spring 配置文件使用xml格式编写</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!--配置User对象创建 id的值为别名--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.atguigu.spring5.User<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​6. 进行测试代码的编写 </p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//1. 加载spring 配置文件</span>      <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"bean1.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//2. 获取配置创建对象</span>    <span class="token class-name">User</span> user <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    user<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客文章</title>
      <link href="/archives/b24dd347.html"/>
      <url>/archives/b24dd347.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>4.25.2022 网课上完 用markdown记笔记</p><ol><li>web前端10节课（jquery,js）</li></ol><span id="more"></span><ol start="2"><li><p>设计模式10节课</p></li><li><p>Linux 10节课</p></li><li><p>博客blog 搭建美化</p></li><li><p>乐跑</p></li><li><p>易打印开会</p></li><li><p>练习吉他</p></li></ol><hr><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>内容</p><hr><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="http://www.shunxin.cn/">www.shunxin.cn</a></p>]]></content>
      
      
      <categories>
          
          <category> commonlife </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> commonlife </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
